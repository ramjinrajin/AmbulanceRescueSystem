<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>